1                                                          The SAS System                              11:02 Wednesday, May 13, 2015

NOTE: Copyright (c) 2002-2012 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.4 (TS1M0) 
      Licensed to UNIVERSITY OF GUELPH, Site 70095643.
NOTE: This session is executing on the Linux 3.6.11-4.fc16.x86_64 (LIN X64) platform.



NOTE: Updated analytical products:
      
      SAS/STAT 12.3 (maintenance)
      SAS/ETS 12.3 (maintenance)
      SAS/OR 12.3 (maintenance)
      SAS/IML 12.3 (maintenance)
      SAS/QC 12.3 (maintenance)

NOTE: Additional host information:

 Linux LIN X64 3.6.11-4.fc16.x86_64 #1 SMP Tue Jan 8 20:57:42 UTC 2013 x86_64 Fedora release 16 (Verne) 

You are running SAS 9. Some SAS 8 files will be automatically converted 
by the V9 engine; others are incompatible.  Please see 
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is 
recommended for converting all your SAS libraries from any 
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.02 seconds
      cpu time            0.01 seconds
      
1          title 'Prediction of Ruminal pH Using Reticuluar pH';
2          
3          options linesize=80; /* Set SAS output to 80 character width */
4          data first;
5              infile '~/pH/ph.dat';
6              input day animal silage dmi time rumenph reticph;
7              label   dmi = 'DMI (kg)'
8                      rumenph = 'Ruminal pH'
9                      reticph = 'Reticular pH';
10         
11             if dmi ne 4 then delete;
12             *time = time + (day - 1); /* Converts all days into continuous
12       ! series */
13         
14             time2 = time**2;
15             time3 = time**3;
16             time4 = time**4;
2                                The SAS System    11:02 Wednesday, May 13, 2015

17         
18         

NOTE: The infile '~/pH/ph.dat' is:
      Filename=/home/seymourd/pH/ph.dat,
      Owner Name=seymourd,Group Name=seymourd,
      Access Permission=-rw-r-----,
      Last Modified=Mon Apr 27 09:43:56 2015,
      File Size (bytes)=806856

NOTE: 17280 records were read from the infile '~/pH/ph.dat'.
      The minimum record length was 28.
      The maximum record length was 48.
NOTE: The data set WORK.FIRST has 864 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

19         proc reg data=first noprint;
20             title2 'Step 1: Generate 4th-Order Polynomial Regression of
20       ! Reticular pH vs. Time';
21             by dmi;
22             Order4: model reticph = time time2 time3 time4;
23             output out=order4 p=pred r=resid;
24         

NOTE: The data set WORK.ORDER4 has 864 observations and 12 variables.
NOTE: PROCEDURE REG used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      

25         data second;
26             set order4;
27             /* Lagged Predicted Reticular pH */
28             lag1p = lag1(pred);
29             lag2p = lag2(pred);
30             lag3p = lag3(pred);
31             lag4p = lag4(pred);
32             lag5p = lag5(pred);
33             lag6p = lag6(pred);
34             lag7p = lag7(pred);
35             lag8p = lag8(pred);
36             lag9p = lag9(pred);
37             lag10p = lag10(pred);
38         
39             /* Lagged Residual Reticular pH */
40             lag1r = lag1(resid);
41             lag2r = lag2(resid);
42             lag3r = lag3(resid);
43             lag4r = lag4(resid);
44             lag5r = lag5(resid);
45             lag6r = lag6(resid);
46             lag7r = lag7(resid);
47             lag8r = lag8(resid);
48             lag9r = lag9(resid);
49             lag10r = lag10(resid);
3                                The SAS System    11:02 Wednesday, May 13, 2015

50         
51         

NOTE: There were 864 observations read from the data set WORK.ORDER4.
NOTE: The data set WORK.SECOND has 864 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

52         proc pdlreg data=second noprint;
53             by dmi;
54             title2 'Step 2: Determine Optimal Degree for Distribution';
55             model rumenph = pred(12,10,1) lag1r;
56         
57         
58         /* Enable proc below after determining degree */
59         

NOTE: PROCEDURE PDLREG used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

60         proc pdlreg data=second method=ml noprint;
61             title2 'Step 3: Primary Lag Number Determination';
62             X: model rumenph = pred(10,1) lag1r;
63             XX: model rumenph = pred(20,1) lag1r;
64             XXX: model rumenph = pred(30,1) lag1r;
65             XL: model rumenph = pred(40,1) lag1r;
66             L: model rumenph = pred(50,1) lag1r;
67             LX: model rumenph = pred(60,1) lag1r;
68             LXX: model rumenph = pred(70,1) lag1r;
69             LXXX: model rumenph = pred(80,1) lag1r;
70             XC: model rumenph = pred(90,1) lag1r;
71             C: model rumenph = pred(100,1) lag1r;
72             CX: model rumenph = pred(110,1) lag1r;
73             CXX: model rumenph = pred(120,1) lag1r;
74             CXXX: model rumenph = pred(130,1) lag1r;
75             CXL: model rumenph = pred(140,1) lag1r;
76             CL: model rumenph = pred(150,1) lag1r;
77             CLX: model rumenph = pred(160,1) lag1r;
78             CLXX: model rumenph = pred(170,1) lag1r;
79             CLXXX: model rumenph = pred(180,1) lag1r;
80             CXC: model rumenph = pred(190,1) lag1r;
81             CC: model rumenph = pred(200,1) lag1r;
82         
83         /* Enable proc below after determining suitable starting lag */
84         /* NOTE: If the degree of the distribution is higher than the lag
84       ! number, SAS
85             will automatically lower the degree to match */
86         

NOTE: PROCEDURE PDLREG used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds
      

4                                The SAS System    11:02 Wednesday, May 13, 2015

87         proc pdlreg data=second method=ml;
88             title2 'Step 4: Lag Number Optimization';
89             N10_Lags: model rumenph = pred(10,1) lag1r;
90             N9_Lags: model rumenph = pred(1,1) lag1r;
91             N8_Lags: model rumenph = pred(2,1) lag1r;
92             N7_Lags: model rumenph = pred(3,1) lag1r;
93             N6_Lags: model rumenph = pred(4,1) lag1r;
94             N5_Lags: model rumenph = pred(5,1) lag1r;
95             N4_Lags: model rumenph = pred(6,1) lag1r;
96             N3_Lags: model rumenph = pred(7,1) lag1r;
97             N2_Lags: model rumenph = pred(8,1) lag1r;
98             N1_Lags: model rumenph = pred(9,1) lag1r;
99             O_Lags: model rumenph = pred(10,1) lag1r;
100            P1_Lags: model rumenph = pred(11,1) lag1r;
101            P2_Lags: model rumenph = pred(12,1) lag1r;
102            P3_Lags: model rumenph = pred(13,1) lag1r;
103            P4_Lags: model rumenph = pred(14,1) lag1r;
104            P5_Lags: model rumenph = pred(15,1) lag1r;
105            P6_Lags: model rumenph = pred(16,1) lag1r;
106            P7_Lags: model rumenph = pred(17,1) lag1r;
107            P8_Lags: model rumenph = pred(18,1) lag1r;
108            P9_Lags: model rumenph = pred(19,1) lag1r;
109            P10_Lags: model rumenph = pred(20,1) lag1r;
110        
111        run;

NOTE: The PROCEDURE PDLREG printed pages 1-36.
NOTE: PROCEDURE PDLREG used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds
      

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           0.09 seconds
      cpu time            0.08 seconds
      
